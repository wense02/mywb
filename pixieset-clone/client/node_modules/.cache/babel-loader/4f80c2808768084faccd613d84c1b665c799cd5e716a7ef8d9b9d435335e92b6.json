{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oshea\\\\Desktop\\\\mywb\\\\pixieset-clone\\\\client\\\\src\\\\pages\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Container, Typography, Grid, Card, CardContent, CardMedia, Button, Dialog, DialogTitle, DialogContent, TextField, IconButton, LinearProgress, Snackbar, Alert, CircularProgress, ImageList, ImageListItem } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { useDropzone } from 'react-dropzone';\n// import { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const navigate = useNavigate();\n  // const { user } = useAuth(); // We'll keep this for future use\n  const API_URL = process.env.REACT_APP_API_URL;\n  const [galleries, setGalleries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [newGallery, setNewGallery] = useState({\n    title: '',\n    date: new Date().toISOString().split('T')[0]\n  });\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadingImages, setUploadingImages] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n  const fetchGalleries = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${API_URL}/api/galleries`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch galleries');\n      }\n      const data = await response.json();\n      setGalleries(data);\n    } catch (err) {\n      setError('Failed to load galleries');\n      console.error('Error fetching galleries:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [API_URL]);\n  useEffect(() => {\n    fetchGalleries();\n  }, [fetchGalleries]);\n  const onDrop = useCallback(acceptedFiles => {\n    setSelectedFiles(prev => [...prev, ...acceptedFiles]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png']\n    }\n  });\n  const handleCreateGallery = async e => {\n    e.preventDefault();\n    try {\n      if (!newGallery.title || !newGallery.date) {\n        setSnackbar({\n          open: true,\n          message: 'Title and date are required',\n          severity: 'error'\n        });\n        return;\n      }\n      setUploadingImages(true);\n      setUploadProgress(0);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication required. Please log in again.');\n      }\n      const formData = new FormData();\n      formData.append('title', newGallery.title);\n      formData.append('date', newGallery.date);\n      if (selectedFiles.length === 0) {\n        setSnackbar({\n          open: true,\n          message: 'Please select at least one image',\n          severity: 'error'\n        });\n        return;\n      }\n      selectedFiles.forEach(file => {\n        if (file.size > 10 * 1024 * 1024) {\n          // 10MB\n          throw new Error(`File ${file.name} is too large. Maximum size is 10MB.`);\n        }\n        formData.append('images', file);\n      });\n      const xhr = new XMLHttpRequest();\n      return new Promise((resolve, reject) => {\n        xhr.open('POST', `${API_URL}/api/galleries`);\n        xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n        xhr.upload.onprogress = event => {\n          if (event.lengthComputable) {\n            const progress = Math.round(event.loaded / event.total * 100);\n            setUploadProgress(progress);\n          }\n        };\n        xhr.onload = () => {\n          try {\n            const response = JSON.parse(xhr.response);\n            if (xhr.status === 200) {\n              setGalleries([response, ...galleries]);\n              setOpenDialog(false);\n              setNewGallery({\n                title: '',\n                date: new Date().toISOString().split('T')[0]\n              });\n              setSelectedFiles([]);\n              setSnackbar({\n                open: true,\n                message: 'Gallery created successfully!',\n                severity: 'success'\n              });\n              resolve(response);\n            } else {\n              throw new Error(response.message || 'Failed to create gallery');\n            }\n          } catch (error) {\n            reject(new Error(error.message || 'Failed to create gallery'));\n          }\n        };\n        xhr.onerror = () => {\n          reject(new Error('Network error occurred while creating gallery'));\n        };\n        xhr.send(formData);\n      });\n    } catch (err) {\n      console.error('Error creating gallery:', err);\n      setSnackbar({\n        open: true,\n        message: err.message || 'Failed to create gallery',\n        severity: 'error'\n      });\n    } finally {\n      setUploadingImages(false);\n      setUploadProgress(0);\n    }\n  };\n  const handleUploadImages = async galleryId => {\n    if (selectedFiles.length === 0) return;\n    try {\n      setUploadingImages(true);\n      setUploadProgress(0);\n      const token = localStorage.getItem('token');\n      const formData = new FormData();\n      selectedFiles.forEach(file => {\n        formData.append('images', file);\n      });\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', `${API_URL}/api/galleries/${galleryId}/images`);\n        xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n        xhr.upload.onprogress = event => {\n          if (event.lengthComputable) {\n            const progress = Math.round(event.loaded / event.total * 100);\n            setUploadProgress(progress);\n          }\n        };\n        xhr.onload = () => {\n          if (xhr.status === 200) {\n            const updatedGallery = JSON.parse(xhr.response);\n            setGalleries(galleries.map(g => g._id === updatedGallery._id ? updatedGallery : g));\n            setSelectedFiles([]);\n            setSnackbar({\n              open: true,\n              message: 'Images uploaded successfully!',\n              severity: 'success'\n            });\n            resolve();\n          } else {\n            reject(new Error('Failed to upload images'));\n          }\n        };\n        console.log('xhr.response', xhr.response);\n        console.log('xhr.status', xhr.status);\n        xhr.onerror = () => {\n          reject(new Error('Failed to upload images'));\n        };\n        xhr.send(formData);\n      });\n    } catch (err) {\n      setSnackbar({\n        open: true,\n        message: 'Failed to upload images',\n        severity: 'error'\n      });\n      console.error('Error uploading images:', err);\n    } finally {\n      setUploadingImages(false);\n      setUploadProgress(0);\n    }\n  };\n  const handleViewGallery = galleryId => {\n    navigate(`/gallery/${galleryId}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '60vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      py: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            component: \"h1\",\n            sx: {\n              fontWeight: 700\n            },\n            children: \"Client Galleries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 26\n            }, this),\n            onClick: () => setOpenDialog(true),\n            sx: {\n              px: 3,\n              py: 1.5,\n              '&:hover': {\n                transform: 'translateY(-2px)',\n                transition: 'transform 0.2s ease-in-out'\n              }\n            },\n            children: \"Create New Gallery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 4\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), galleries.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            py: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: \"No galleries found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: \"Create your first gallery by clicking the button above\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 4,\n          children: galleries.map((gallery, index) => {\n            var _gallery$images;\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(motion.div, {\n                initial: {\n                  opacity: 0,\n                  y: 20\n                },\n                animate: {\n                  opacity: 1,\n                  y: 0\n                },\n                transition: {\n                  duration: 0.8,\n                  delay: index * 0.1\n                },\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  sx: {\n                    height: '100%',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    '&:hover': {\n                      transform: 'translateY(-8px)',\n                      transition: 'transform 0.3s ease-in-out'\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                    component: \"img\",\n                    height: \"200\",\n                    image: gallery.coverImage ? `${API_URL}${gallery.coverImage}` : 'https://source.unsplash.com/800x600/?photography',\n                    alt: gallery.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      gutterBottom: true,\n                      children: gallery.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: [\"Date: \", new Date(gallery.date).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: [((_gallery$images = gallery.images) === null || _gallery$images === void 0 ? void 0 : _gallery$images.length) || 0, \" images\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      color: \"primary\",\n                      fullWidth: true,\n                      sx: {\n                        mt: 2\n                      },\n                      onClick: () => handleViewGallery(gallery._id),\n                      children: \"View Gallery\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this)\n            }, gallery._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Create New Gallery\", /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setOpenDialog(false),\n          sx: {\n            position: 'absolute',\n            right: 8,\n            top: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleCreateGallery,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Gallery Title\",\n            name: \"title\",\n            value: newGallery.title,\n            onChange: e => setNewGallery({\n              ...newGallery,\n              title: e.target.value\n            }),\n            required: true,\n            sx: {\n              mb: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Date\",\n            type: \"date\",\n            name: \"date\",\n            value: newGallery.date,\n            onChange: e => setNewGallery({\n              ...newGallery,\n              date: e.target.value\n            }),\n            required: true,\n            sx: {\n              mb: 3\n            },\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ...getRootProps(),\n            sx: {\n              p: 3,\n              border: '2px dashed',\n              borderColor: isDragActive ? 'primary.main' : 'grey.300',\n              borderRadius: 2,\n              textAlign: 'center',\n              cursor: 'pointer',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n              sx: {\n                fontSize: 48,\n                color: 'primary.main',\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: isDragActive ? 'Drop the images here' : 'Drag & drop images here, or click to select files'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              children: [\"Selected Images (\", selectedFiles.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n              sx: {\n                maxHeight: 200\n              },\n              cols: 4,\n              rowHeight: 100,\n              children: selectedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(ImageListItem, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: URL.createObjectURL(file),\n                  alt: `Selected ${index + 1}`,\n                  loading: \"lazy\"\n                  // style={{ height: '100%', objectFit: 'cover' }}\n                  ,\n                  crossOrigin: \"anonymous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), uploadingImages && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: uploadProgress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              align: \"right\",\n              sx: {\n                mt: 1\n              },\n              children: [uploadProgress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            disabled: uploadingImages,\n            sx: {\n              mt: 3\n            },\n            children: uploadingImages ? 'Creating Gallery...' : 'Create Gallery'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbar.open,\n      autoHideDuration: 6000,\n      onClose: () => setSnackbar({\n        ...snackbar,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setSnackbar({\n          ...snackbar,\n          open: false\n        }),\n        severity: snackbar.severity,\n        sx: {\n          width: '100%'\n        },\n        children: snackbar.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"Sz4dDHmTikHkgAtk59f0R2evayQ=\", false, function () {\n  return [useNavigate, useDropzone];\n});\n_c = Gallery;\nexport default Gallery;\n\n// import pixieset-clone\\server\\uploads\\1744127105207.jpg;\n// const loadImage = (imageName) => {\n//   import(`@/server/uploads/${imageName}`).then(image => {\n//     this.setState({\n//       image\n//     });\n//   });\n// };\n/**render() {\n  const { image } = this.state;\n  return (\n    <Fragment>\n      {image && <img src={image} alt=\"\" />}\n    </Fragment>\n  );\n};*/\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useNavigate","Box","Container","Typography","Grid","Card","CardContent","CardMedia","Button","Dialog","DialogTitle","DialogContent","TextField","IconButton","LinearProgress","Snackbar","Alert","CircularProgress","ImageList","ImageListItem","motion","AddIcon","CloseIcon","CloudUploadIcon","useDropzone","jsxDEV","_jsxDEV","Gallery","_s","navigate","API_URL","process","env","REACT_APP_API_URL","galleries","setGalleries","loading","setLoading","error","setError","openDialog","setOpenDialog","newGallery","setNewGallery","title","date","Date","toISOString","split","selectedFiles","setSelectedFiles","uploadingImages","setUploadingImages","uploadProgress","setUploadProgress","snackbar","setSnackbar","open","message","severity","fetchGalleries","token","localStorage","getItem","response","fetch","headers","ok","Error","data","json","err","console","onDrop","acceptedFiles","prev","getRootProps","getInputProps","isDragActive","accept","handleCreateGallery","e","preventDefault","formData","FormData","append","length","forEach","file","size","name","xhr","XMLHttpRequest","Promise","resolve","reject","setRequestHeader","upload","onprogress","event","lengthComputable","progress","Math","round","loaded","total","onload","JSON","parse","status","onerror","send","handleUploadImages","galleryId","updatedGallery","map","g","_id","log","handleViewGallery","sx","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","py","maxWidth","div","initial","opacity","y","animate","transition","duration","mb","variant","component","fontWeight","color","startIcon","onClick","px","transform","textAlign","gutterBottom","container","spacing","gallery","index","_gallery$images","item","xs","sm","md","delay","height","flexDirection","image","coverImage","alt","toLocaleDateString","images","fullWidth","mt","onClose","position","right","top","onSubmit","label","value","onChange","target","required","type","InputLabelProps","shrink","p","border","borderColor","borderRadius","cursor","fontSize","maxHeight","cols","rowHeight","src","URL","createObjectURL","crossOrigin","align","disabled","autoHideDuration","width","_c","$RefreshReg$"],"sources":["C:/Users/oshea/Desktop/mywb/pixieset-clone/client/src/pages/Gallery.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  IconButton,\n  LinearProgress,\n  Snackbar,\n  Alert,\n  CircularProgress,\n  ImageList,\n  ImageListItem\n} from '@mui/material';\nimport { motion } from 'framer-motion';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport { useDropzone } from 'react-dropzone';\n// import { useAuth } from '../contexts/AuthContext';\n\nconst Gallery = () => {\n  const navigate = useNavigate();\n  // const { user } = useAuth(); // We'll keep this for future use\n  const API_URL = process.env.REACT_APP_API_URL;\n\n  const [galleries, setGalleries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [openDialog, setOpenDialog] = useState(false);\n  const [newGallery, setNewGallery] = useState({\n    title: '',\n    date: new Date().toISOString().split('T')[0]\n  });\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadingImages, setUploadingImages] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  const fetchGalleries = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`${API_URL}/api/galleries`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch galleries');\n      }\n\n      const data = await response.json();\n      setGalleries(data);\n    } catch (err) {\n      setError('Failed to load galleries');\n      console.error('Error fetching galleries:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [API_URL]);\n\n  useEffect(() => {\n    fetchGalleries();\n  }, [fetchGalleries]);\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setSelectedFiles(prev => [...prev, ...acceptedFiles]);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png']\n    }\n  });\n\n  const handleCreateGallery = async (e) => {\n    e.preventDefault();\n    try {\n      if (!newGallery.title || !newGallery.date) {\n        setSnackbar({\n          open: true,\n          message: 'Title and date are required',\n          severity: 'error'\n        });\n        return;\n      }\n\n      setUploadingImages(true);\n      setUploadProgress(0);\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        throw new Error('Authentication required. Please log in again.');\n      }\n\n      const formData = new FormData();\n      formData.append('title', newGallery.title);\n      formData.append('date', newGallery.date);\n      \n      if (selectedFiles.length === 0) {\n        setSnackbar({\n          open: true,\n          message: 'Please select at least one image',\n          severity: 'error'\n        });\n        return;\n      }\n\n      selectedFiles.forEach(file => {\n        if (file.size > 10 * 1024 * 1024) { // 10MB\n          throw new Error(`File ${file.name} is too large. Maximum size is 10MB.`);\n        }\n        formData.append('images', file);\n      });\n\n      const xhr = new XMLHttpRequest();\n      \n      return new Promise((resolve, reject) => {\n        xhr.open('POST', `${API_URL}/api/galleries`);\n        xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n\n        xhr.upload.onprogress = (event) => {\n          if (event.lengthComputable) {\n            const progress = Math.round((event.loaded / event.total) * 100);\n            setUploadProgress(progress);\n          }\n        };\n\n        xhr.onload = () => {\n          try {\n            const response = JSON.parse(xhr.response);\n            \n            if (xhr.status === 200) {\n              setGalleries([response, ...galleries]);\n              setOpenDialog(false);\n              setNewGallery({ title: '', date: new Date().toISOString().split('T')[0] });\n              setSelectedFiles([]);\n              setSnackbar({\n                open: true,\n                message: 'Gallery created successfully!',\n                severity: 'success'\n              });\n              resolve(response);\n            } else {\n              throw new Error(response.message || 'Failed to create gallery');\n            }\n          } catch (error) {\n            reject(new Error(error.message || 'Failed to create gallery'));\n          }\n        };\n\n        xhr.onerror = () => {\n          reject(new Error('Network error occurred while creating gallery'));\n        };\n\n        xhr.send(formData);\n      });\n    } catch (err) {\n      console.error('Error creating gallery:', err);\n      setSnackbar({\n        open: true,\n        message: err.message || 'Failed to create gallery',\n        severity: 'error'\n      });\n    } finally {\n      setUploadingImages(false);\n      setUploadProgress(0);\n    }\n  };\n\n  const handleUploadImages = async (galleryId) => {\n    if (selectedFiles.length === 0) return;\n\n    try {\n      setUploadingImages(true);\n      setUploadProgress(0);\n      const token = localStorage.getItem('token');\n      const formData = new FormData();\n      \n      selectedFiles.forEach(file => {\n        formData.append('images', file);\n      });\n\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', `${API_URL}/api/galleries/${galleryId}/images`);\n        xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n\n        xhr.upload.onprogress = (event) => {\n          if (event.lengthComputable) {\n            const progress = Math.round((event.loaded / event.total) * 100);\n            setUploadProgress(progress);\n          }\n        };\n\n        xhr.onload = () => {\n          if (xhr.status === 200) {\n            const updatedGallery = JSON.parse(xhr.response);\n            setGalleries(galleries.map(g => \n              g._id === updatedGallery._id ? updatedGallery : g\n            ));\n            setSelectedFiles([]);\n            setSnackbar({\n              open: true,\n              message: 'Images uploaded successfully!',\n              severity: 'success'\n            });\n            resolve();\n          } else {\n            reject(new Error('Failed to upload images'));\n          }\n        };\n        console.log('xhr.response', xhr.response);\n        console.log('xhr.status', xhr.status); \n\n        xhr.onerror = () => {\n          reject(new Error('Failed to upload images'));\n        };\n\n        xhr.send(formData);\n      });\n    } catch (err) {\n      setSnackbar({\n        open: true,\n        message: 'Failed to upload images',\n        severity: 'error'\n      });\n      console.error('Error uploading images:', err);\n    } finally {\n      setUploadingImages(false);\n      setUploadProgress(0);\n    }\n  };\n\n  const handleViewGallery = (galleryId) => {\n    navigate(`/gallery/${galleryId}`);\n  };\n\n  if (loading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '60vh' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ py: 8 }}>\n      <Container maxWidth=\"lg\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 6 }}>\n            <Typography variant=\"h3\" component=\"h1\" sx={{ fontWeight: 700 }}>\n              Client Galleries\n            </Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<AddIcon />}\n              onClick={() => setOpenDialog(true)}\n              sx={{\n                px: 3,\n                py: 1.5,\n                '&:hover': {\n                  transform: 'translateY(-2px)',\n                  transition: 'transform 0.2s ease-in-out'\n                }\n              }}\n            >\n              Create New Gallery\n            </Button>\n          </Box>\n\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 4 }}>\n              {error}\n            </Alert>\n          )}\n\n          {galleries.length === 0 ? (\n            <Box sx={{ textAlign: 'center', py: 8 }}>\n              <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                No galleries found\n              </Typography>\n              <Typography color=\"text.secondary\">\n                Create your first gallery by clicking the button above\n              </Typography>\n            </Box>\n          ) : (\n            <Grid container spacing={4}>\n              {galleries.map((gallery, index) => (\n                <Grid item xs={12} sm={6} md={4} key={gallery._id}>\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.8, delay: index * 0.1 }}\n                  >\n                    <Card\n                      sx={{\n                        height: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        '&:hover': {\n                          transform: 'translateY(-8px)',\n                          transition: 'transform 0.3s ease-in-out'\n                        }\n                      }}\n                    >\n                      <CardMedia\n                        component=\"img\"\n                        height=\"200\"\n                        image={gallery.coverImage ? `${API_URL}${gallery.coverImage}` : 'https://source.unsplash.com/800x600/?photography'}\n                        alt={gallery.title}\n                      />\n                      <CardContent>\n                        <Typography variant=\"h6\" gutterBottom>\n                          {gallery.title}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Date: {new Date(gallery.date).toLocaleDateString()}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          {gallery.images?.length || 0} images\n                        </Typography>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          fullWidth\n                          sx={{ mt: 2 }}\n                          onClick={() => handleViewGallery(gallery._id)}\n                        >\n                          View Gallery\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                </Grid>\n              ))}\n            </Grid>\n          )}\n        </motion.div>\n      </Container>\n\n      {/* Create Gallery Dialog */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          Create New Gallery\n          <IconButton\n            onClick={() => setOpenDialog(false)}\n            sx={{ position: 'absolute', right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" onSubmit={handleCreateGallery} sx={{ mt: 2 }}>\n            <TextField\n              fullWidth\n              label=\"Gallery Title\"\n              name=\"title\"\n              value={newGallery.title}\n              onChange={(e) => setNewGallery({ ...newGallery, title: e.target.value })}\n              required\n              sx={{ mb: 3 }}\n            />\n            <TextField\n              fullWidth\n              label=\"Date\"\n              type=\"date\"\n              name=\"date\"\n              value={newGallery.date}\n              onChange={(e) => setNewGallery({ ...newGallery, date: e.target.value })}\n              required\n              sx={{ mb: 3 }}\n              InputLabelProps={{ shrink: true }}\n            />\n            <Box\n              {...getRootProps()}\n              sx={{\n                p: 3,\n                border: '2px dashed',\n                borderColor: isDragActive ? 'primary.main' : 'grey.300',\n                borderRadius: 2,\n                textAlign: 'center',\n                cursor: 'pointer',\n                mb: 3\n              }}\n            >\n              <input {...getInputProps()} />\n              <CloudUploadIcon sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\n              <Typography>\n                {isDragActive\n                  ? 'Drop the images here'\n                  : 'Drag & drop images here, or click to select files'}\n              </Typography>\n            </Box>\n\n            {selectedFiles.length > 0 && (\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Selected Images ({selectedFiles.length})\n                </Typography>\n                <ImageList sx={{ maxHeight: 200 }} cols={4} rowHeight={100}>\n                  {selectedFiles.map((file, index) => (\n                    <ImageListItem key={index}>\n                      <img\n                        src={URL.createObjectURL(file)}\n                        alt={`Selected ${index + 1}`}\n                        loading=\"lazy\"\n                        // style={{ height: '100%', objectFit: 'cover' }}\n                        crossOrigin=\"anonymous\"\n                      />\n                    </ImageListItem>\n                  ))}\n                </ImageList>\n              </Box>\n            )}\n\n            {uploadingImages && (\n              <Box sx={{ mb: 3 }}>\n                <LinearProgress variant=\"determinate\" value={uploadProgress} />\n                <Typography variant=\"body2\" color=\"text.secondary\" align=\"right\" sx={{ mt: 1 }}>\n                  {uploadProgress}%\n                </Typography>\n              </Box>\n            )}\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              fullWidth\n              disabled={uploadingImages}\n              sx={{ mt: 3 }}\n            >\n              {uploadingImages ? 'Creating Gallery...' : 'Create Gallery'}\n            </Button>\n          </Box>\n        </DialogContent>\n      </Dialog>\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n      >\n        <Alert\n          onClose={() => setSnackbar({ ...snackbar, open: false })}\n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default Gallery;\n\n// import pixieset-clone\\server\\uploads\\1744127105207.jpg;\n// const loadImage = (imageName) => {\n//   import(`@/server/uploads/${imageName}`).then(image => {\n//     this.setState({\n//       image\n//     });\n//   });\n// };\n/**render() {\n  const { image } = this.state;\n  return (\n    <Fragment>\n      {image && <img src={image} alt=\"\" />}\n    </Fragment>\n  );\n};*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}