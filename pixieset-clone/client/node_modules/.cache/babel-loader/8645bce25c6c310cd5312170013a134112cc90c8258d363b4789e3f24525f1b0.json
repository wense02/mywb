{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oshea\\\\Desktop\\\\mywb\\\\pixieset-clone\\\\client\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/ThemeContext.js\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(() => {\n    // Initialize theme from localStorage or default to 'light'\n    return localStorage.getItem('theme') || 'light';\n  });\n  useEffect(() => {\n    // Apply the theme to the document body\n    document.body.setAttribute('data-theme', theme);\n    // Save theme to localStorage whenever it changes\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"XWMfIlno8K8Aj4EZcyMeGn7O1yE=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","localStorage","getItem","document","body","setAttribute","setItem","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/oshea/Desktop/mywb/pixieset-clone/client/src/contexts/ThemeContext.js"],"sourcesContent":["// src/contexts/ThemeContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(() => {\r\n    // Initialize theme from localStorage or default to 'light'\r\n    return localStorage.getItem('theme') || 'light';\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Apply the theme to the document body\r\n    document.body.setAttribute('data-theme', theme);\r\n    // Save theme to localStorage whenever it changes\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  return useContext(ThemeContext);\r\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACvC;IACA,OAAOW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;EACjD,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACd;IACAY,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC,YAAY,EAAEN,KAAK,CAAC;IAC/C;IACAE,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBP,QAAQ,CAAEQ,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,oBACEd,OAAA,CAACC,YAAY,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEQ;IAAY,CAAE;IAAAV,QAAA,EAClDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAChB,EAAA,CAtBWF,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAwB1B,OAAO,MAAMoB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,OAAOzB,UAAU,CAACG,YAAY,CAAC;AACjC,CAAC;AAACsB,GAAA,CAFWD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}